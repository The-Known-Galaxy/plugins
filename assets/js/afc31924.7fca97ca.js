"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[988],{61637:e=>{e.exports=JSON.parse('{"functions":[{"name":"New","desc":"Returns a callback that can be used to freely create a new, unique identification number by invoking it.\\n\\n```lua\\nlocal nextUniqueId = NextId.New()\\n\\nprint(nextUniqueId()) --\x3e 1\\nprint(nextUniqueId()) --\x3e 2\\nprint(nextUniqueId()) --\x3e 3\\n```","params":[],"returns":[{"desc":"","lua_type":"() -> number\\r\\n"}],"function_type":"static","source":{"line":21,"path":"src/Modules/Utilities/NextId.luau"}}],"properties":[],"types":[],"name":"NextId","desc":"Provides a way to create a callback that always returns a Unique Identifier, or UID for short, in the form of an infinitely incrementing natural number.\\nInspired by the brilliant justification from [here](https://blog.boyned.com/articles/things-i-learned-using-react/) (CTRL+F `Don\'t type layout orders by hand`).\\nThanks [Kampfkarren](https://github.com/Kampfkarren)!","source":{"line":8,"path":"src/Modules/Utilities/NextId.luau"}}')}}]);